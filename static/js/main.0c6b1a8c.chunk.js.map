{"version":3,"sources":["components/LangFilter.js","i18n.js","components/Content.js","reducers/langReducer.js","services/languages.js","App.js","store.js","index.js"],"names":["LangFilter","props","langs","useSelector","state","sort","a","b","id","Number","Group","defaultValue","size","map","lang","Button","key","value","toUpperCase","onChange","handleChange","resources","en","translation","translationID","i18n","use","initReactI18next","init","lng","withTranslation","t","forEach","addResources","JSON","parse","description","langReducer","action","type","data","defaultSomethings","getAll","axios","get","timeout","res","somethings","console","error","App","dispatch","useDispatch","React","useEffect","langService","then","initLang","layoutStyle","useMediaQuery","query","padding","backgroundColor","basename","className","style","tip","spinning","length","Header","textAlign","changeLanguage","Content","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"0aAiBeA,EAbI,SAACC,GAClB,IAAMC,EAAQC,aAAY,SAAAC,GAAK,OAAIA,KAAOC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,GAAKD,EAAEC,IAAO,EAAIC,OAAOH,EAAEE,GAAKD,EAAEC,OAC7F,OACE,6BACE,kBAAC,UAAME,MAAP,CAAaC,aAAa,KAAKC,KAAK,SACjCV,EACEW,KAAI,SAAAC,GAAI,OACP,kBAAC,UAAMC,OAAP,CAAcC,IAAMF,EAAKN,GAAKS,MAAQH,EAAKN,GAAGU,cAAgBC,SAAU,kBAAMlB,EAAMmB,aAAaN,EAAKN,MAAOM,EAAKN,GAAGU,qB,yBCL3HG,EAAY,CAChBC,GAAI,CACFC,Y,QAEFf,GAAI,CACFe,YAAaC,IAIjBC,IACGC,IAAIC,KACJC,KAAK,CACJP,YACAQ,IAAK,OAGMJ,QAAf,ECJeK,iBAbC,SAAC,GAAW,IAATC,EAAQ,EAARA,EAMjB,OALc5B,aAAY,SAAAC,GAAK,OAAIA,KAC7B4B,SAAQ,SAAAlB,GACZW,EAAKQ,aAAanB,EAAKN,GAAI,cAAe0B,KAAKC,MAAMrB,EAAKsB,iBAI1D,6BACGL,EAAE,e,kBCYMM,EAzBK,WAAyB,IAAxBjC,EAAuB,uDAAf,GAAIkC,EAAW,uCAC1C,OAAQA,EAAOC,MACf,IAAK,WACH,OAAOD,EAAOxB,KAChB,IAAK,aACH,OAAOwB,EAAOE,KAChB,QACE,OAAOpC,I,4CCHLqC,EAAoB,CAAC,CAAEjC,GAAI,KAAM4B,YAAa,8EAYrC,GAAEM,OAVL,uCAAG,4BAAApC,EAAA,+EAEOqC,IAAMC,IAAN,UANL,4CAMK,iBAAqC,CAAEC,QAAS,MAFvD,cAELC,EAFK,yBAGJA,EAAIN,KAAKO,YAHL,uCAKXC,QAAQC,MAAR,MALW,kBAMJR,GANI,yDAAH,sD,SC0CGS,EApCH,WACV,IAAMC,EAAWC,cAEjBC,IAAMC,WAAU,WACdC,EAAYb,SAASc,MAAK,SAAAtD,GAAK,OAC7BiD,EFCkB,SAACjD,GACvB,MAAO,CACLqC,KAAM,aACNC,KAAMtC,GEJKuD,CAASvD,SAEnB,CAACiD,IAEJ,IAIMjD,EAAQC,aAAY,SAAAC,GAAK,OAAIA,KAG7BsD,EADcC,wBAAc,CAAEC,MAAO,wBACT,CAAEC,QAAS,kBAAmBC,gBAAiB,SAAY,CAAEA,gBAAiB,SAEhH,OACE,kBAAC,IAAD,CAAeC,SAAS,KACtB,kBAAC,IAAD,CAAQC,UAAU,SAASC,MAAOP,GAChC,kBAAC,IAAD,CAAMQ,IAAI,aAAaC,SAAWjE,EAAMkE,QAAW,GACjD,kBAAC,IAAOC,OAAR,CAAeJ,MAAO,CAAEK,UAAW,UACjC,kBAAC,EAAD,CAAYlD,aAdH,SAACN,GAClBW,EAAK8C,eAAezD,OAed,kBAAC,IAAO0D,QAAR,CAAgBP,MAAO,CAAEJ,QAAS,sBAAuBC,gBAAiB,YACxE,yBAAKG,MAAQ,CAAEK,UAAW,UAAYN,UAAU,uBAC9C,kBAAC,EAAD,Y,iBC7BCS,EALDC,sBACZrC,EACAsC,iC,OCCFC,IAASC,OACP,kBAAC,IAAD,CAAUJ,MAAOA,GACf,kBAAC,EAAD,OAEFK,SAASC,eAAe,W","file":"static/js/main.0c6b1a8c.chunk.js","sourcesContent":["import React from 'react'\nimport { Radio } from 'antd'\nimport { useSelector } from 'react-redux'\n\nconst LangFilter = (props) => {\n  const langs = useSelector(state => state).sort((a, b) => a.id < b.id ? - 1 : Number(a.id > b.id))\n  return (\n    <div>\n      <Radio.Group defaultValue='EN' size='large'>\n        {langs\n          .map(lang =>\n            <Radio.Button key={ lang.id } value={ lang.id.toUpperCase() } onChange={() => props.handleChange(lang.id)}>{ lang.id.toUpperCase() }</Radio.Button>)}\n      </Radio.Group>\n    </div>\n  )\n}\n\nexport default LangFilter\n","import i18n from 'i18next'\nimport { initReactI18next } from 'react-i18next/hooks'\n\nimport translationID from './locales/id/translation.json'\nimport translationEN from './locales/en/translation.json'\n\nconst resources = {\n  en: {\n    translation: translationEN\n  },\n  id: {\n    translation: translationID\n  }\n}\n\ni18n\n  .use(initReactI18next)\n  .init({\n    resources,\n    lng: 'en',\n  })\n\nexport default i18n\n","import React from 'react'\nimport { withTranslation } from 'react-i18next/hooks'\nimport { useSelector } from 'react-redux'\nimport i18n from '../i18n'\n\nconst Content = ({ t }) => {\n  const langs = useSelector(state => state)\n  langs.forEach(lang => {\n    i18n.addResources(lang.id, 'translation', JSON.parse(lang.description))\n  })\n\n  return (\n    <div>\n      {t('nothing')}\n    </div>\n  )\n}\n\nexport default withTranslation()(Content)\n","const langReducer = (state = [], action) => {\n  switch (action.type) {\n  case 'SET_LANG':\n    return action.lang\n  case 'INIT_LANGS':\n    return action.data\n  default:\n    return state\n  }\n}\n\nexport const langChange = lang => {\n  return {\n    type: 'SET_LANG',\n    lang,\n  }\n}\n\nexport const initLang = (langs) => {\n  return {\n    type: 'INIT_LANGS',\n    data: langs\n  }\n}\n\nexport default langReducer\n","import axios from 'axios'\n\nconst baseUrl  = 'https://morning-ocean-73257.herokuapp.com'\n\nconst defaultSomethings = [{ id: 'en', description: '{\"nothing\":\"nothing personal here\",\"something\":\"something personal here\"}' }]\n\nconst getAll = async () => {\n  try {\n    const res = await axios.get(`${baseUrl}/v1/something`, { timeout: 10000 })\n    return res.data.somethings\n  } catch(err) {\n    console.error(err)\n    return defaultSomethings\n  }\n}\n\nexport default { getAll }\n","import React from 'react'\nimport { BrowserRouter } from 'react-router-dom'\nimport LangFilter from './components/LangFilter'\nimport Content from './components/Content'\nimport i18n from './i18n'\nimport { Layout, Spin } from 'antd'\nimport { useDispatch } from 'react-redux'\nimport { initLang } from './reducers/langReducer'\nimport langService from './services/languages'\nimport { useSelector } from 'react-redux'\nimport { useMediaQuery  } from 'react-responsive'\n\nconst App = () => {\n  const dispatch = useDispatch()\n\n  React.useEffect(() => {\n    langService.getAll().then(langs =>\n      dispatch(initLang(langs))\n    )\n  }, [dispatch])\n\n  const changeLang = (lang) => {\n    i18n.changeLanguage(lang)\n  }\n\n  const langs = useSelector(state => state)\n\n  const isBigScreen = useMediaQuery({ query: '(min-width: 1000px)'  })\n  const layoutStyle = isBigScreen ? { padding: '10% 50% 10% 10%', backgroundColor: 'white' } : { backgroundColor: 'white' }\n\n  return (\n    <BrowserRouter basename='/'>\n      <Layout className='layout' style={layoutStyle}>\n        <Spin tip='loading...' spinning={ langs.length <=  0 }>\n          <Layout.Header style={{ textAlign: 'right' }}>\n            <LangFilter handleChange={changeLang} />\n          </Layout.Header>\n          <Layout.Content style={{ padding: '50px 50px 50px 50px', backgroundColor: '#f5f5f5' }}>\n            <div style ={{ textAlign: 'center' }} className='site-layout-content'>\n              <Content />\n            </div>\n          </Layout.Content>\n        </Spin>\n      </Layout>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","import { createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport langReducer from './reducers/langReducer'\n\nconst store = createStore(\n  langReducer,\n  composeWithDevTools()\n)\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport store from './store'\nimport { Provider } from 'react-redux'\nimport 'antd/dist/antd.css'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}
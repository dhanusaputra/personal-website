{"version":3,"sources":["components/LangFilter.js","i18n.js","App.js","reducers/langReducer.js","store.js","index.js"],"names":["LangFilter","props","Group","defaultValue","size","Button","value","onChange","handleChange","resources","en","translation","id","translationID","i18n","use","initReactI18next","init","lng","keySeparator","interpolation","escapeValue","withTranslation","t","basename","className","Header","style","textAlign","changeLanguage","Content","padding","langReducer","state","action","type","lang","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"maAceA,EAXI,SAACC,GAClB,OACE,6BACE,kBAAC,UAAMC,MAAP,CAAaC,aAAa,KAAKC,KAAK,SAClC,kBAAC,UAAMC,OAAP,CAAcC,MAAM,KAAKC,SAAU,kBAAMN,EAAMO,aAAa,QAA5D,MACA,kBAAC,UAAMH,OAAP,CAAcC,MAAM,KAAKC,SAAU,kBAAMN,EAAMO,aAAa,QAA5D,S,yBCFFC,EAAY,CAChBC,GAAI,CACFC,Y,QAEFC,GAAI,CACFD,YAAaE,IAIjBC,IACGC,IAAIC,KACJC,KAAK,CACJR,YACAS,IAAK,KAELC,cAAc,EAEdC,cAAe,CACbC,aAAa,KAIJP,QAAf,E,SCAeQ,iBArBH,SAAC,GAAW,IAATC,EAAQ,EAARA,EAKb,OACE,kBAAC,IAAD,CAAeC,SAAS,KACtB,kBAAC,IAAD,CAAQC,UAAU,UAChB,kBAAC,IAAOC,OAAR,CAAeC,MAAO,CAAEC,UAAW,UACjC,kBAAC,EAAD,CAAYpB,aARF,SAACU,GACjBJ,EAAKe,eAAeX,OAShB,kBAAC,IAAOY,QAAR,CAAgBH,MAAO,CAAEI,QAAS,yBAChC,yBAAKN,UAAU,uBACZF,EAAE,kB,iBCJAS,EAhBK,WAA2B,IAA1BC,EAAyB,uDAAjB,KAAMC,EAAW,uCAC5C,OAAQA,EAAOC,MACf,IAAK,WACH,OAAOD,EAAOE,KAChB,QACE,OAAOH,ICKII,EALDC,sBACZN,EACAO,iC,gBCEFC,IAASC,OACP,kBAAC,IAAD,CAAUJ,MAAOA,GACf,kBAAC,EAAD,OAEFK,SAASC,eAAe,W","file":"static/js/main.dc6ddf31.chunk.js","sourcesContent":["import React from 'react'\nimport { Radio } from 'antd'\n\nconst LangFilter = (props) => {\n  return (\n    <div>\n      <Radio.Group defaultValue='ID' size='large'>\n        <Radio.Button value='ID' onChange={() => props.handleChange('id')}>ID</Radio.Button>\n        <Radio.Button value='EN' onChange={() => props.handleChange('en')}>EN</Radio.Button>\n      </Radio.Group>\n    </div>\n  )\n}\n\nexport default LangFilter\n","import i18n from 'i18next'\nimport { initReactI18next } from 'react-i18next/hooks'\n\nimport translationID from './locales/id/translation.json'\nimport translationEN from './locales/en/translation.json'\n\nconst resources = {\n  en: {\n    translation: translationEN\n  },\n  id: {\n    translation: translationID\n  }\n}\n\ni18n\n  .use(initReactI18next)\n  .init({\n    resources,\n    lng: 'id',\n\n    keySeparator: false,\n\n    interpolation: {\n      escapeValue: false\n    }\n  })\n\nexport default i18n\n","import React from 'react'\nimport { BrowserRouter } from 'react-router-dom'\nimport LangFilter from './components/LangFilter'\nimport { withTranslation } from 'react-i18next/hooks'\nimport i18n from './i18n'\nimport { Layout } from 'antd'\n\nconst App = ({ t }) => {\n  const changeLng = (lng) => {\n    i18n.changeLanguage(lng)\n  }\n\n  return (\n    <BrowserRouter basename='/'>\n      <Layout className='layout'>\n        <Layout.Header style={{ textAlign: 'right' }}>\n          <LangFilter handleChange={changeLng} />\n        </Layout.Header>\n        <Layout.Content style={{ padding: '50px 50px 50px 100px' }}>\n          <div className='site-layout-content'>\n            {t('nothing')}\n          </div>\n        </Layout.Content>\n      </Layout>\n    </BrowserRouter>\n  )\n}\n\nexport default withTranslation()(App)\n","const langReducer = (state = 'id', action) => {\n  switch (action.type) {\n  case 'SET_LANG':\n    return action.lang\n  default:\n    return state\n  }\n}\n\nexport const langChange = lang => {\n  return {\n    type: 'SET_LANG',\n    lang,\n  }\n}\n\nexport default langReducer\n","import { createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport langReducer from './reducers/langReducer'\n\nconst store = createStore(\n  langReducer,\n  composeWithDevTools()\n)\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport store from './store'\nimport { Provider } from 'react-redux'\nimport 'antd/dist/antd.css'\nimport './i18n'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}